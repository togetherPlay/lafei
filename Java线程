<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link href='https://fonts.googleapis.com/css?family=Architects+Daughter' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" type="text/css" href="stylesheets/stylesheet.css" media="screen">
    <link rel="stylesheet" type="text/css" href="stylesheets/github-light.css" media="screen">
    <link rel="stylesheet" type="text/css" href="stylesheets/print.css" media="print">

    <!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <title>游走的拉菲</title>
  </head>

  <body>
    <header>
      <div class="inner">
        <h1>Java四种线程池的使用</h1>
        <a href="https://github.com/togetherPlay/lafei.github.com" class="button"><small>View project on</small> GitHub</a>
      </div>
    </header>
    <div id="content-wrapper">
      (1) newCachedThreadPool
            创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程;线程池为无限大，当执行第二个任务时第一个任务已经完成，会复用执行第一个任务的线程，而不用每次新建线程。
      (2) newFixedThreadPool
            创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待。因为线程池大小为3，每个任务输出index后sleep 2秒，所以每两秒打印3个数字。
        定长线程池的大小最好根据系统资源进行设置。如Runtime.getRuntime().availableProcessors()。
      (3)  newScheduledThreadPool
            创建一个定长线程池，支持定时及周期性任务执行。
      (4) newSingleThreadExecutor
            创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。
    </div>
  </body>
</html>
